@model SpedizioniSPA.Models.Aggiornamenti

@{
    ViewBag.Title = "EditAggiornamento";
    List<SpedizioniSPA.Models.Aggiornamenti> ListAggiornamenti = ViewBag.ListAggiornamenti;
}

<h2>EditAggiornamento</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Aggiornamenti</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.idSpedizione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idSpedizione, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idSpedizione, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Stato, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Stato, new SelectList(new[]
            {
                //
                new SelectListItem { Text = "In Transito", Value = "2 - In Transito" },
                new SelectListItem { Text = "In Consegna", Value = "3 - In Consegna" },
                new SelectListItem { Text = "Consegnato", Value = "4 - Consegnato" },
                new SelectListItem { Text = "Non Consegnato", Value = "4 - Non Consegnato" }
                // Aggiungi altre opzioni qui se necessario
            }, "Value", "Text"), "Seleziona uno stato", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Stato, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Posizione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Posizione, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Posizione, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div class="container">
    <div class="row">
        <div class="col">
            <div class="row mt-2 mb-3  fw-bold text-white p-3 position-sticky">
                <div class="col ">Id Spedizione</div>
                <div class="col">Stato</div>
                <div class="col">Posizione</div>
                <div class="col">Descrizione</div>
                <div class="col">Aggiornamento</div>
            </div>

            @foreach (var item in ListAggiornamenti)
            {

                <div class="cardHover">
                    <div class="row fw-bold p-3 text-white glass mb-3 cursor swing-in-top-fwd">
                        <div class="col ">@item.idSpedizione</div>
                        <div class="col">@item.Stato</div>
                        <div class="col">@item.Posizione</div>
                        <div class="col">@item.Descrizione</div>
                        <div class="col">@item.Aggiornamento</div>
                    </div>
                </div>

            }



        </div>
    </div>
</div>


